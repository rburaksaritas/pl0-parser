#################################
##### Extended PL/0 Grammar #####
#################################

Program → Block '.'

Block → [Comment] ConstDecl VarDecl ProcDecl FuncDecl StatementList

ConstDecl → "const" ConstAssignmentList ";" 
          | ε

ConstAssignmentList → identifier "=" number
                    | ConstAssignmentList "," identifier "=" number

VarDecl → "var" IdentifierList ";"
        | ArrayDecl
        | ε

IdentifierList → identifier
               | IdentifierList "," identifier

ProcDecl → ProcDecl "procedure" identifier ";" Block ";"
         | ε

FuncDecl → FuncDecl "function" identifier "(" ParamList ")" ";" Block ";"
         | ε

StatementList → Statement
              | StatementList ";" Statement

Statement → identifier ":=" Expression
          | "call" identifier
          | "begin" StatementList "end"
          | IfThenElseStmt
          | WhileStmt
          | ForLoop
          | BreakStmt
          | ArrayAssignment
          | FuncCall
          | ReadWriteStmt
          | ε

IfThenElseStmt → "if" Condition "then" Statement "else" Statement
               | "if" Condition "then" Statement

WhileStmt → "while" Condition "do" Statement

ForLoop → "for" identifier ":=" Expression "to" Expression "do" Statement

BreakStmt → "break" ";"

ArrayDecl → "var" identifier "[" number "]" ";"
          | ε

ArrayAccess → identifier "[" Expression "]"

ArrayAssignment → ArrayAccess ":=" Expression

ParamList → ParamDecl
           | ParamList "," ParamDecl
           | ε

ParamDecl → "var" identifier

FuncCall → identifier "(" ArgList ")"

ArgList → Expression
         | ArgList "," Expression
         | ε

ReturnStmt → "return" Expression ";"

ReadWriteStmt → ReadStmt
              | WriteStmt
              | WriteLineStmt

ReadStmt → "read" "(" identifier ")"

WriteStmt → "write" "(" Expression ")"

WriteLineStmt → "writeline" "(" Expression ")"

Condition → "odd" Expression
           | Expression Relation Expression

Relation → "="
          | "<>"
          | "<"
          | ">"
          | "<="
          | ">="

Expression → Term 
           | Expression AddSubOperator Term

Term → Factor
     | Term MulDivModOperator Factor

MulDivModOperator → "*"
                  | "/"
                  | "%"

AddSubOperator → "+"
               | "-"

Factor → identifier
       | number
       | "(" Expression ")"
       | ArrayAccess

Comment → "/*" CommentContent "*/"

CommentContent → "*" CommentContent 
               | "/" CommentContent 
               | (any character except "*" and "/") CommentContent 
               | ε


