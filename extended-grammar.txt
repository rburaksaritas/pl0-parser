################################
##### Extended PL/0 Grammar ####
################################

Program → Block "."

Block → ConstDecl VarDecl ProcDecl FuncDecl Statement

ConstDecl → "const" ConstAssignmentList ";"

ConstAssignmentList → identifier "=" number
                    | ConstAssignmentList "," identifier "=" number

VarDecl → "var" IdentifierList ";"
        | ArrayDecl
        | ε

IdentifierList → identifier
               | IdentifierList "," identifier

ProcDecl → ProcDecl "procedure" identifier ";" Block ";"
         | ε

Statement → identifier ":=" Expression
          | "call" identifier
          | "begin" StatementList "end"
          | "if" Condition "then" Statement
          | "while" Condition "do" Statement
          | Comments Statement
          | IfThenElseStmt
          | ForLoop
          | BreakStmt
          | ArrayAssignment
          | FuncCall
          | ReturnStmt
          | ReadWriteStmt
          | ε

StatementList → Statement
              | StatementList ";" Statement

Condition → "odd" Expression
           | Expression Relation Expression

Relation → "="
          | "<>"
          | "<"
          | ">"
          | "<="
          | ">="

Expression → Term AddSubOperator Term
            | Term ModOperator Term
            | Expression AddSubOperator Term
            | Expression ModOperator Term

AddSubOperator → "+"
                | "-"

Term → Factor MulDivOperator Factor
     | Term MulDivOperator Factor

MulDivOperator → "*"
               | "/"

Factor → identifier
        | ArrayAccess
        | number
        | "(" Expression ")"

##################################
##### Extended Grammar Rules #####
##################################

Comments → "/*" AnySequenceOfCharacters "*/"

IfThenElseStmt → "if" Condition "then" Statement "else" Statement

ForLoop → "for" identifier ":=" Expression "to" Expression "do" Statement

BreakStmt → "break"

ArrayDecl → "var" identifier "[" number "]" ";"

ArrayAccess → identifier "[" Expression "]"

ArrayAssignment → ArrayAccess ":=" Expression

FuncDecl → FuncDecl 'function' identifier "(" ParamList ")" ";" Block ";"
          | ε

ParamList → ParamDecl
           | ParamList "," ParamDecl
           | ε

ParamDecl → "var" identifier

FuncCall → identifier "(" ArgList ")"

ArgList → Expression
         | ArgList "," Expression
         | ε
         
ReturnStmt → "return" Expression ";"

ModOperator → "%"

ReadWriteStmt → ReadStmt 
              | WriteStmt
              | WriteLineStmt

ReadStmt → "read" "(" identifier ")"

WriteStmt → "write" "(" identifier ")"

WriteLineStmt → "writeline" "(" identifier ")"

